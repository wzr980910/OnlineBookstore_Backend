<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookStore.mapper.ShoppingMapper">

    <resultMap id="BaseResultMap" type="com.bookStore.pojo.Shopping">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="bookId" column="bookId" jdbcType="BIGINT"/>
        <result property="userId" column="userId" jdbcType="VARCHAR"/>
        <result property="bookName" column="bookName" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="number" column="number" jdbcType="INTEGER"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectPageShopping" resultType="com.bookStore.pojo.respojo.CartBook">
        select a.id,
               a.bookId,
               a.userId,
               b.picture as bookImg,
               a.bookName,
               a.price,
               a.number
        from shopping a
                 left join book b on a.bookId = b.id
        where a.userId = #{userId}
    </select>

    <update id="updateShopping">
        update shopping
        set shopping.number = #{number}
        where shopping.bookId = #{bookId}
    </update>

    <delete id="deleteShopping">
        delete from shopping
        where userId = #{userId}
        <if test="bookIdsList != null">
            and bookId in
            <foreach collection="bookIdsList" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>
    <insert id="insertOrUpdateBatch">
        <foreach collection="shoppingList" item="shopping"  separator=";">
            <choose>
                <when test="shopping.id == null">
                    insert into shopping(bookId,userId,bookName,price,number,createTime,updateTime)
                    values(#{shopping.bookId}, #{shopping.userId},#{shopping.bookName},#{shopping.price},#{shopping.number},now(),now())
                </when>
                <otherwise>
                    update shopping set number=number+#{shopping.number} , updateTime=now() where id=#{shopping.id}
                </otherwise>
            </choose>
        </foreach>
    </insert>
</mapper>
